{"uid":"87890b99ea70d024","name":"Переход на страницу с жалобами","fullName":"tests.test_excursium.TestUserCases#test_user_report_problem","historyId":"6ccf52d0675463b7f2ebb26dc5cf7f58","time":{"start":1753444258274,"stop":1753444264846,"duration":6572},"description":"Пользовательский сценарий перехода на вкладку с экскурсиями и на страницу с жалобами","descriptionHtml":"<p>Пользовательский сценарий перехода на вкладку с экскурсиями и на страницу с жалобами</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (1247, 4235)\n  (Session info: chrome=138.0.7204.157); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#elementclickinterceptedexception","statusTrace":"self = <test_excursium.TestUserCases object at 0x7f0a8c663950>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"6bef57b0821957d5593a9ceb2fdfcad0\")>\n\n    @allure.title(\"Переход на страницу с жалобами\")\n    @allure.severity(\"Normal\")\n    @pytest.mark.user_case\n    def test_user_report_problem(self, driver):\n        \"\"\"Пользовательский сценарий перехода на вкладку с экскурсиями и на страницу с жалобами\"\"\"\n        main_page = MainPage(driver)\n    \n        with allure.step(\"Открываем страницу\"):\n            driver.get(config.base_url)\n    \n        with allure.step(\"Переходим на страницу с экскурсиями\"):\n            driver.find_element(*main_page.all_excursion_btn).click()\n    \n        with allure.step(\"Находим и скролим до кнопки отправки жалобы\"):\n            report_btn = driver.find_element(*main_page.report_btn)\n            main_page.scroll_to(report_btn)\n>           report_btn.click()\n\ntests/test_excursium.py:111: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.13/site-packages/selenium/webdriver/remote/webelement.py:120: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.13/site-packages/selenium/webdriver/remote/webelement.py:573: in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:454: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f0a8c0b5090>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element is not clickable at point (1247, 4235)\\\\n  (Session info: chrome=138.0.7204.157)\",\"stacktrace\":\"\"}}'}\n\n    def check_response(self, response: dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                try:\n                    value = json.loads(value_json)\n                    if isinstance(value, dict):\n                        if len(value) == 1:\n                            value = value[\"value\"]\n                        status = value.get(\"error\", None)\n                        if not status:\n                            status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                            message = value.get(\"value\") or value.get(\"message\")\n                            if not isinstance(message, str):\n                                value = message\n                                message = message.get(\"message\")\n                        else:\n                            message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (1247, 4235)\nE         (Session info: chrome=138.0.7204.157); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#elementclickinterceptedexception\n\n/usr/local/lib/python3.13/site-packages/selenium/webdriver/remote/errorhandler.py:232: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1753444257863,"stop":1753444258274,"duration":411},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Пользовательский сценарий перехода на вкладку с экскурсиями и на страницу с жалобами","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (1247, 4235)\n  (Session info: chrome=138.0.7204.157); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#elementclickinterceptedexception","statusTrace":"self = <test_excursium.TestUserCases object at 0x7f0a8c663950>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"6bef57b0821957d5593a9ceb2fdfcad0\")>\n\n    @allure.title(\"Переход на страницу с жалобами\")\n    @allure.severity(\"Normal\")\n    @pytest.mark.user_case\n    def test_user_report_problem(self, driver):\n        \"\"\"Пользовательский сценарий перехода на вкладку с экскурсиями и на страницу с жалобами\"\"\"\n        main_page = MainPage(driver)\n    \n        with allure.step(\"Открываем страницу\"):\n            driver.get(config.base_url)\n    \n        with allure.step(\"Переходим на страницу с экскурсиями\"):\n            driver.find_element(*main_page.all_excursion_btn).click()\n    \n        with allure.step(\"Находим и скролим до кнопки отправки жалобы\"):\n            report_btn = driver.find_element(*main_page.report_btn)\n            main_page.scroll_to(report_btn)\n>           report_btn.click()\n\ntests/test_excursium.py:111: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.13/site-packages/selenium/webdriver/remote/webelement.py:120: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.13/site-packages/selenium/webdriver/remote/webelement.py:573: in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:454: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f0a8c0b5090>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element is not clickable at point (1247, 4235)\\\\n  (Session info: chrome=138.0.7204.157)\",\"stacktrace\":\"\"}}'}\n\n    def check_response(self, response: dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                try:\n                    value = json.loads(value_json)\n                    if isinstance(value, dict):\n                        if len(value) == 1:\n                            value = value[\"value\"]\n                        status = value.get(\"error\", None)\n                        if not status:\n                            status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                            message = value.get(\"value\") or value.get(\"message\")\n                            if not isinstance(message, str):\n                                value = message\n                                message = message.get(\"message\")\n                        else:\n                            message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (1247, 4235)\nE         (Session info: chrome=138.0.7204.157); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#elementclickinterceptedexception\n\n/usr/local/lib/python3.13/site-packages/selenium/webdriver/remote/errorhandler.py:232: ElementClickInterceptedException","steps":[{"name":"Открываем страницу","time":{"start":1753444258275,"stop":1753444260381,"duration":2106},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Переходим на страницу с экскурсиями","time":{"start":1753444260381,"stop":1753444263741,"duration":3360},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Находим и скролим до кнопки отправки жалобы","time":{"start":1753444263741,"stop":1753444264844,"duration":1103},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (1247, 4235)\n  (Session info: chrome=138.0.7204.157); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#elementclickinterceptedexception\n\n","statusTrace":"  File \"/app/tests/test_excursium.py\", line 111, in test_user_report_problem\n    report_btn.click()\n    ~~~~~~~~~~~~~~~~^^\n  File \"/usr/local/lib/python3.13/site-packages/selenium/webdriver/remote/webelement.py\", line 120, in click\n    self._execute(Command.CLICK_ELEMENT)\n    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.13/site-packages/selenium/webdriver/remote/webelement.py\", line 573, in _execute\n    return self._parent.execute(command, params)\n           ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py\", line 454, in execute\n    self.error_handler.check_response(response)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^\n  File \"/usr/local/lib/python3.13/site-packages/selenium/webdriver/remote/errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Скроллим до элемента","time":{"start":1753444263758,"stop":1753444263784,"duration":26},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"stepsCount":1,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"4b698c9f7c915bf3","name":"Скриншот при падении","source":"4b698c9f7c915bf3.png","type":"image/png","size":590070}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":1,"stepsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1753444265123,"stop":1753444265187,"duration":64},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"Пользовательские сценарии"},{"name":"severity","value":"Normal"},{"name":"tag","value":"user_case"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_excursium"},{"name":"subSuite","value":"TestUserCases"},{"name":"host","value":"420dc34c9163"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_excursium"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":18,"unknown":0,"total":22},"items":[{"uid":"83626fc0397401e1","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (1247, 4052)\n  (Session info: chrome=138.0.7204.168); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#elementclickinterceptedexception\nStacktrace:\n#0 0x55a48eeba70e <unknown>\n#1 0x55a48e956a51 <unknown>\n#2 0x55a48e9a7701 <unknown>\n#3 0x55a48e9a5cb9 <unknown>\n#4 0x55a48e9a3851 <unknown>\n#5 0x55a48e9a2fe3 <unknown>\n#6 0x55a48e99791a <unknown>\n#7 0x55a48e9c4ff2 <unknown>\n#8 0x55a48e9970fd <unknown>\n#9 0x55a48e9c51be <unknown>\n#10 0x55a48e9e4444 <unknown>\n#11 0x55a48e9c4dc3 <unknown>\n#12 0x55a48e995959 <unknown>\n#13 0x55a48e9964c1 <unknown>\n#14 0x55a48ee868aa <unknown>\n#15 0x55a48ee89c11 <unknown>\n#16 0x55a48ee896a8 <unknown>\n#17 0x55a48ee8a0b5 <unknown>\n#18 0x55a48ee7034c <unknown>\n#19 0x55a48ee8a421 <unknown>\n#20 0x55a48ee58e2a <unknown>\n#21 0x55a48eea8855 <unknown>\n#22 0x55a48eea8a4e <unknown>\n#23 0x55a48eeb99f5 <unknown>\n#24 0x7fe2bc9481f5 <unknown>","time":{"start":1753435553128,"stop":1753435561190,"duration":8062}},{"uid":"1e61eb2774632203","status":"passed","time":{"start":1753434844313,"stop":1753434852462,"duration":8149}},{"uid":"23b2ef80de5dd263","status":"passed","time":{"start":1753433685033,"stop":1753433700313,"duration":15280}},{"uid":"d1146af39f81bf47","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (1247, 1001)\n  (Session info: chrome=138.0.7204.168); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#elementclickinterceptedexception\nStacktrace:\n#0 0x55c1f743070e <unknown>\n#1 0x55c1f6ecca51 <unknown>\n#2 0x55c1f6f1d701 <unknown>\n#3 0x55c1f6f1bcb9 <unknown>\n#4 0x55c1f6f19851 <unknown>\n#5 0x55c1f6f18fe3 <unknown>\n#6 0x55c1f6f0d91a <unknown>\n#7 0x55c1f6f3aff2 <unknown>\n#8 0x55c1f6f0d0fd <unknown>\n#9 0x55c1f6f3b1be <unknown>\n#10 0x55c1f6f5a444 <unknown>\n#11 0x55c1f6f3adc3 <unknown>\n#12 0x55c1f6f0b959 <unknown>\n#13 0x55c1f6f0c4c1 <unknown>\n#14 0x55c1f73fc8aa <unknown>\n#15 0x55c1f73ffc11 <unknown>\n#16 0x55c1f73ff6a8 <unknown>\n#17 0x55c1f74000b5 <unknown>\n#18 0x55c1f73e634c <unknown>\n#19 0x55c1f7400421 <unknown>\n#20 0x55c1f73cee2a <unknown>\n#21 0x55c1f741e855 <unknown>\n#22 0x55c1f741ea4e <unknown>\n#23 0x55c1f742f9f5 <unknown>\n#24 0x7f97ac4941c4 <unknown>","time":{"start":1753432666386,"stop":1753432679608,"duration":13222}},{"uid":"ea048ab5fde16e1a","status":"passed","time":{"start":1753432044066,"stop":1753432059013,"duration":14947}},{"uid":"b1283b0c5ea84fdc","status":"passed","time":{"start":1753427744914,"stop":1753427752631,"duration":7717}},{"uid":"78c2f3500c4716f1","status":"passed","time":{"start":1753427281876,"stop":1753427289624,"duration":7748}},{"uid":"4400e098f3902028","status":"passed","time":{"start":1753426896550,"stop":1753426902760,"duration":6210}},{"uid":"e8f80702276dfeb9","status":"passed","time":{"start":1753426651334,"stop":1753426663591,"duration":12257}},{"uid":"d74840f7f35eebc7","status":"passed","time":{"start":1753425904376,"stop":1753425912319,"duration":7943}},{"uid":"ce3e208d23fb89b2","status":"passed","time":{"start":1753425617918,"stop":1753425625910,"duration":7992}},{"uid":"f5f0f613963a22c1","status":"passed","time":{"start":1753422520858,"stop":1753422527057,"duration":6199}},{"uid":"ddc802b1956ea700","status":"passed","time":{"start":1753422166092,"stop":1753422172136,"duration":6044}},{"uid":"edd9b5b84a7b3156","status":"passed","time":{"start":1753421234472,"stop":1753421240684,"duration":6212}},{"uid":"a97d7793832b0851","status":"passed","time":{"start":1753420791255,"stop":1753420797741,"duration":6486}},{"uid":"a9b42faed6b37d61","status":"passed","time":{"start":1753420391342,"stop":1753420398554,"duration":7212}},{"uid":"d60d20d3978be610","status":"passed","time":{"start":1753418221469,"stop":1753418227530,"duration":6061}},{"uid":"bffcfa0e6e4efbb4","status":"passed","time":{"start":1753417830544,"stop":1753417837543,"duration":6999}},{"uid":"4b20e0aa2ee24a93","status":"passed","time":{"start":1753414929651,"stop":1753414936309,"duration":6658}},{"uid":"162932071a831642","status":"passed","time":{"start":1753414421058,"stop":1753414427699,"duration":6641}}]},"tags":["user_case"]},"source":"87890b99ea70d024.json","parameterValues":[]}