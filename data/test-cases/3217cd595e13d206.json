{"uid":"3217cd595e13d206","name":"Оформление экскурсии","fullName":"tests.test_excursium.TestUserCases#test_order_excursion","historyId":"8dbe8db0514bd0080803b2e3e65bae34","time":{"start":1753365442752,"stop":1753365461995,"duration":19243},"description":"Переход с главной страницы к экскурсиям с дальнейшим оформлением одной из них (юзер-сценарий)","descriptionHtml":"<p>Переход с главной страницы к экскурсиям с дальнейшим оформлением одной из них (юзер-сценарий)</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome=138.0.7204.168); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#elementnotinteractableexception\nStacktrace:\n#0 0x55f26b7f270e <unknown>\n#1 0x55f26b28e7dc <unknown>\n#2 0x55f26b2dad04 <unknown>\n#3 0x55f26b2cf91a <unknown>\n#4 0x55f26b2fcff2 <unknown>\n#5 0x55f26b2cf0fd <unknown>\n#6 0x55f26b2fd1be <unknown>\n#7 0x55f26b31c444 <unknown>\n#8 0x55f26b2fcdc3 <unknown>\n#9 0x55f26b2cd959 <unknown>\n#10 0x55f26b2ce4c1 <unknown>\n#11 0x55f26b7be8aa <unknown>\n#12 0x55f26b7c1c11 <unknown>\n#13 0x55f26b7c16a8 <unknown>\n#14 0x55f26b7c20b5 <unknown>\n#15 0x55f26b7a834c <unknown>\n#16 0x55f26b7c2421 <unknown>\n#17 0x55f26b790e2a <unknown>\n#18 0x55f26b7e0855 <unknown>\n#19 0x55f26b7e0a4e <unknown>\n#20 0x55f26b7f19f5 <unknown>\n#21 0x7fafa21751c4 <unknown>","statusTrace":"self = <test_excursium.TestUserCases object at 0x7f3a207bcf50>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"9d7896571dbc48eb7062de8d7f599b05\")>\n\n    @allure.title(\"Оформление экскурсии\")\n    @allure.severity(\"Critical\")\n    @pytest.mark.user_case\n    def test_order_excursion(self, driver):\n        \"\"\"Переход с главной страницы к экскурсиям с дальнейшим оформлением одной из них (юзер-сценарий)\"\"\"\n        excursion_page = ExcursionPage(driver)\n        main_page = MainPage(driver)\n    \n        with allure.step(\"Открываем страницу\"):\n            driver.get(config.base_url)\n    \n        with allure.step(\"Переходим на страницу с экскурсиями\"):\n            driver.find_element(*main_page.all_excursion_btn).click()\n    \n        with allure.step(\"Переходим на страницу первой экскурсии списка\"):\n            first_excursion = main_page.excursions()[0]\n            first_excursion.click()\n    \n        # change the handle\n        excursion_page.move_last_handle()\n        page_url = driver.current_url\n    \n        # scroll to order button and click\n        order_button = driver.find_element(*excursion_page.order_button)\n        excursion_page.scroll_to(order_button)\n    \n        with allure.step(\"Кликаем на кнопку заказа\"):\n            order_button.click()\n    \n        with allure.step(\"Ждем и проверяем открытие окна\"):\n            order_window = driver.find_element(*excursion_page.order_window)\n            main_page.wait.until(lambda x: order_window.is_displayed())\n    \n        with allure.step(\"Заполняем поля корректными данными\"):\n            driver.find_element(*excursion_page.date_field).click()\n>           driver.find_elements(\"xpath\", \"//div/span[@class='flatpickr-day ']\")[0].click()\n\ntests/test_excursium.py:74: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.13/site-packages/selenium/webdriver/remote/webelement.py:120: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.13/site-packages/selenium/webdriver/remote/webelement.py:573: in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:454: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f3a207be710>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...\\\\n#19 0x55f26b7e0a4e \\\\u003Cunknown>\\\\n#20 0x55f26b7f19f5 \\\\u003Cunknown>\\\\n#21 0x7fafa21751c4 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                try:\n                    value = json.loads(value_json)\n                    if isinstance(value, dict):\n                        if len(value) == 1:\n                            value = value[\"value\"]\n                        status = value.get(\"error\", None)\n                        if not status:\n                            status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                            message = value.get(\"value\") or value.get(\"message\")\n                            if not isinstance(message, str):\n                                value = message\n                                message = message.get(\"message\")\n                        else:\n                            message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: chrome=138.0.7204.168); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#elementnotinteractableexception\nE       Stacktrace:\nE       #0 0x55f26b7f270e <unknown>\nE       #1 0x55f26b28e7dc <unknown>\nE       #2 0x55f26b2dad04 <unknown>\nE       #3 0x55f26b2cf91a <unknown>\nE       #4 0x55f26b2fcff2 <unknown>\nE       #5 0x55f26b2cf0fd <unknown>\nE       #6 0x55f26b2fd1be <unknown>\nE       #7 0x55f26b31c444 <unknown>\nE       #8 0x55f26b2fcdc3 <unknown>\nE       #9 0x55f26b2cd959 <unknown>\nE       #10 0x55f26b2ce4c1 <unknown>\nE       #11 0x55f26b7be8aa <unknown>\nE       #12 0x55f26b7c1c11 <unknown>\nE       #13 0x55f26b7c16a8 <unknown>\nE       #14 0x55f26b7c20b5 <unknown>\nE       #15 0x55f26b7a834c <unknown>\nE       #16 0x55f26b7c2421 <unknown>\nE       #17 0x55f26b790e2a <unknown>\nE       #18 0x55f26b7e0855 <unknown>\nE       #19 0x55f26b7e0a4e <unknown>\nE       #20 0x55f26b7f19f5 <unknown>\nE       #21 0x7fafa21751c4 <unknown>\n\n/usr/local/lib/python3.13/site-packages/selenium/webdriver/remote/errorhandler.py:232: ElementNotInteractableException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1753365442416,"stop":1753365442751,"duration":335},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Переход с главной страницы к экскурсиям с дальнейшим оформлением одной из них (юзер-сценарий)","status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome=138.0.7204.168); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#elementnotinteractableexception\nStacktrace:\n#0 0x55f26b7f270e <unknown>\n#1 0x55f26b28e7dc <unknown>\n#2 0x55f26b2dad04 <unknown>\n#3 0x55f26b2cf91a <unknown>\n#4 0x55f26b2fcff2 <unknown>\n#5 0x55f26b2cf0fd <unknown>\n#6 0x55f26b2fd1be <unknown>\n#7 0x55f26b31c444 <unknown>\n#8 0x55f26b2fcdc3 <unknown>\n#9 0x55f26b2cd959 <unknown>\n#10 0x55f26b2ce4c1 <unknown>\n#11 0x55f26b7be8aa <unknown>\n#12 0x55f26b7c1c11 <unknown>\n#13 0x55f26b7c16a8 <unknown>\n#14 0x55f26b7c20b5 <unknown>\n#15 0x55f26b7a834c <unknown>\n#16 0x55f26b7c2421 <unknown>\n#17 0x55f26b790e2a <unknown>\n#18 0x55f26b7e0855 <unknown>\n#19 0x55f26b7e0a4e <unknown>\n#20 0x55f26b7f19f5 <unknown>\n#21 0x7fafa21751c4 <unknown>","statusTrace":"self = <test_excursium.TestUserCases object at 0x7f3a207bcf50>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"9d7896571dbc48eb7062de8d7f599b05\")>\n\n    @allure.title(\"Оформление экскурсии\")\n    @allure.severity(\"Critical\")\n    @pytest.mark.user_case\n    def test_order_excursion(self, driver):\n        \"\"\"Переход с главной страницы к экскурсиям с дальнейшим оформлением одной из них (юзер-сценарий)\"\"\"\n        excursion_page = ExcursionPage(driver)\n        main_page = MainPage(driver)\n    \n        with allure.step(\"Открываем страницу\"):\n            driver.get(config.base_url)\n    \n        with allure.step(\"Переходим на страницу с экскурсиями\"):\n            driver.find_element(*main_page.all_excursion_btn).click()\n    \n        with allure.step(\"Переходим на страницу первой экскурсии списка\"):\n            first_excursion = main_page.excursions()[0]\n            first_excursion.click()\n    \n        # change the handle\n        excursion_page.move_last_handle()\n        page_url = driver.current_url\n    \n        # scroll to order button and click\n        order_button = driver.find_element(*excursion_page.order_button)\n        excursion_page.scroll_to(order_button)\n    \n        with allure.step(\"Кликаем на кнопку заказа\"):\n            order_button.click()\n    \n        with allure.step(\"Ждем и проверяем открытие окна\"):\n            order_window = driver.find_element(*excursion_page.order_window)\n            main_page.wait.until(lambda x: order_window.is_displayed())\n    \n        with allure.step(\"Заполняем поля корректными данными\"):\n            driver.find_element(*excursion_page.date_field).click()\n>           driver.find_elements(\"xpath\", \"//div/span[@class='flatpickr-day ']\")[0].click()\n\ntests/test_excursium.py:74: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.13/site-packages/selenium/webdriver/remote/webelement.py:120: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.13/site-packages/selenium/webdriver/remote/webelement.py:573: in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:454: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f3a207be710>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...\\\\n#19 0x55f26b7e0a4e \\\\u003Cunknown>\\\\n#20 0x55f26b7f19f5 \\\\u003Cunknown>\\\\n#21 0x7fafa21751c4 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                try:\n                    value = json.loads(value_json)\n                    if isinstance(value, dict):\n                        if len(value) == 1:\n                            value = value[\"value\"]\n                        status = value.get(\"error\", None)\n                        if not status:\n                            status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                            message = value.get(\"value\") or value.get(\"message\")\n                            if not isinstance(message, str):\n                                value = message\n                                message = message.get(\"message\")\n                        else:\n                            message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: chrome=138.0.7204.168); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#elementnotinteractableexception\nE       Stacktrace:\nE       #0 0x55f26b7f270e <unknown>\nE       #1 0x55f26b28e7dc <unknown>\nE       #2 0x55f26b2dad04 <unknown>\nE       #3 0x55f26b2cf91a <unknown>\nE       #4 0x55f26b2fcff2 <unknown>\nE       #5 0x55f26b2cf0fd <unknown>\nE       #6 0x55f26b2fd1be <unknown>\nE       #7 0x55f26b31c444 <unknown>\nE       #8 0x55f26b2fcdc3 <unknown>\nE       #9 0x55f26b2cd959 <unknown>\nE       #10 0x55f26b2ce4c1 <unknown>\nE       #11 0x55f26b7be8aa <unknown>\nE       #12 0x55f26b7c1c11 <unknown>\nE       #13 0x55f26b7c16a8 <unknown>\nE       #14 0x55f26b7c20b5 <unknown>\nE       #15 0x55f26b7a834c <unknown>\nE       #16 0x55f26b7c2421 <unknown>\nE       #17 0x55f26b790e2a <unknown>\nE       #18 0x55f26b7e0855 <unknown>\nE       #19 0x55f26b7e0a4e <unknown>\nE       #20 0x55f26b7f19f5 <unknown>\nE       #21 0x7fafa21751c4 <unknown>\n\n/usr/local/lib/python3.13/site-packages/selenium/webdriver/remote/errorhandler.py:232: ElementNotInteractableException","steps":[{"name":"Открываем страницу","time":{"start":1753365442752,"stop":1753365447021,"duration":4269},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Переходим на страницу с экскурсиями","time":{"start":1753365447021,"stop":1753365449748,"duration":2727},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Переходим на страницу первой экскурсии списка","time":{"start":1753365449748,"stop":1753365449868,"duration":120},"status":"passed","steps":[{"name":"Получаем список экскурсий","time":{"start":1753365449748,"stop":1753365449762,"duration":14},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Переходим на открытую вкладку","time":{"start":1753365449868,"stop":1753365449894,"duration":26},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Скроллим до элемента","time":{"start":1753365451132,"stop":1753365451157,"duration":25},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Кликаем на кнопку заказа","time":{"start":1753365451157,"stop":1753365451239,"duration":82},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Ждем и проверяем открытие окна","time":{"start":1753365451239,"stop":1753365451857,"duration":618},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Заполняем поля корректными данными","time":{"start":1753365451857,"stop":1753365461993,"duration":10136},"status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome=138.0.7204.168); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#elementnotinteractableexception\nStacktrace:\n#0 0x55f26b7f270e <unknown>\n#1 0x55f26b28e7dc <unknown>\n#2 0x55f26b2dad04 <unknown>\n#3 0x55f26b2cf91a <unknown>\n#4 0x55f26b2fcff2 <unknown>\n#5 0x55f26b2cf0fd <unknown>\n#6 0x55f26b2fd1be <unknown>\n#7 0x55f26b31c444 <unknown>\n#8 0x55f26b2fcdc3 <unknown>\n#9 0x55f26b2cd959 <unknown>\n#10 0x55f26b2ce4c1 <unknown>\n#11 0x55f26b7be8aa <unknown>\n#12 0x55f26b7c1c11 <unknown>\n#13 0x55f26b7c16a8 <unknown>\n#14 0x55f26b7c20b5 <unknown>\n#15 0x55f26b7a834c <unknown>\n#16 0x55f26b7c2421 <unknown>\n#17 0x55f26b790e2a <unknown>\n#18 0x55f26b7e0855 <unknown>\n#19 0x55f26b7e0a4e <unknown>\n#20 0x55f26b7f19f5 <unknown>\n#21 0x7fafa21751c4 <unknown>\n\n","statusTrace":"  File \"/app/tests/test_excursium.py\", line 74, in test_order_excursion\n    driver.find_elements(\"xpath\", \"//div/span[@class='flatpickr-day ']\")[0].click()\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^\n  File \"/usr/local/lib/python3.13/site-packages/selenium/webdriver/remote/webelement.py\", line 120, in click\n    self._execute(Command.CLICK_ELEMENT)\n    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.13/site-packages/selenium/webdriver/remote/webelement.py\", line 573, in _execute\n    return self._parent.execute(command, params)\n           ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py\", line 454, in execute\n    self.error_handler.check_response(response)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^\n  File \"/usr/local/lib/python3.13/site-packages/selenium/webdriver/remote/errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"3c5813c9e4780ee9","name":"Скриншот при падении","source":"3c5813c9e4780ee9.png","type":"image/png","size":531720}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":9,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1753365462470,"stop":1753365462535,"duration":65},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"Пользовательские сценарии"},{"name":"severity","value":"Critical"},{"name":"tag","value":"user_case"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_excursium"},{"name":"subSuite","value":"TestUserCases"},{"name":"host","value":"1c243e2c63e1"},{"name":"thread","value":"19-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_excursium"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["user_case"]},"source":"3217cd595e13d206.json","parameterValues":[]}