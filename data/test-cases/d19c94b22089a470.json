{"uid":"d19c94b22089a470","name":"Авторизация в аккаунт с корректными данными","fullName":"tests.test_excursium.TestUserCases#test_enter_account_correct_data","historyId":"413771a93b852e424406e12591211125","time":{"start":1753537699403,"stop":1753537714134,"duration":14731},"description":"Проверка возможности входа в аккаунт с корректными данными","descriptionHtml":"<p>Проверка возможности входа в аккаунт с корректными данными</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <test_excursium.TestUserCases object at 0x7fc91a8b6ad0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7e9409031eb75c272765c34079d74243\")>\n\n    @allure.title(\"Авторизация в аккаунт с корректными данными\")\n    @allure.severity(\"Critical\")\n    @pytest.mark.auth\n    def test_enter_account_correct_data(self, driver):\n        \"\"\"Проверка возможности входа в аккаунт с корректными данными\"\"\"\n        with allure.step(\"Открываем страницу\"):\n            login_page = LoginPage(driver)\n            driver.get(config.base_url)\n    \n        with allure.step(\"Переходим к странице логина\"):\n            driver.find_element(*login_page.login_header).click()\n>           assert login_page.is_opened(config.login_url), \"Отсутствует переход к страница логина\"\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntests/test_excursium.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nbase/base_page.py:17: in is_opened\n    return self.wait.until(EC.url_to_be(page))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"7e9409031eb75c272765c34079d74243\")>\nmethod = <function url_to_be.<locals>._predicate at 0x7fc91a86c400>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/usr/local/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:138: TimeoutException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1753537694873,"stop":1753537699403,"duration":4530},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Проверка возможности входа в аккаунт с корректными данными","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <test_excursium.TestUserCases object at 0x7fc91a8b6ad0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7e9409031eb75c272765c34079d74243\")>\n\n    @allure.title(\"Авторизация в аккаунт с корректными данными\")\n    @allure.severity(\"Critical\")\n    @pytest.mark.auth\n    def test_enter_account_correct_data(self, driver):\n        \"\"\"Проверка возможности входа в аккаунт с корректными данными\"\"\"\n        with allure.step(\"Открываем страницу\"):\n            login_page = LoginPage(driver)\n            driver.get(config.base_url)\n    \n        with allure.step(\"Переходим к странице логина\"):\n            driver.find_element(*login_page.login_header).click()\n>           assert login_page.is_opened(config.login_url), \"Отсутствует переход к страница логина\"\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntests/test_excursium.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nbase/base_page.py:17: in is_opened\n    return self.wait.until(EC.url_to_be(page))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"7e9409031eb75c272765c34079d74243\")>\nmethod = <function url_to_be.<locals>._predicate at 0x7fc91a86c400>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/usr/local/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:138: TimeoutException","steps":[{"name":"Открываем страницу","time":{"start":1753537699403,"stop":1753537701465,"duration":2062},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Переходим к странице логина","time":{"start":1753537701466,"stop":1753537714133,"duration":12667},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \n\n","statusTrace":"  File \"/app/tests/test_excursium.py\", line 23, in test_enter_account_correct_data\n    assert login_page.is_opened(config.login_url), \"Отсутствует переход к страница логина\"\n           ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^\n  File \"/app/base/base_page.py\", line 17, in is_opened\n    return self.wait.until(EC.url_to_be(page))\n           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.13/site-packages/selenium/webdriver/support/wait.py\", line 138, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[{"name":"Проверяем открыта ли страница","time":{"start":1753537704058,"stop":1753537714132,"duration":10074},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \n\n","statusTrace":"  File \"/app/base/base_page.py\", line 17, in is_opened\n    return self.wait.until(EC.url_to_be(page))\n           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.13/site-packages/selenium/webdriver/support/wait.py\", line 138, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"79c366ddbc6c433b","name":"Скриншот при падении","source":"79c366ddbc6c433b.png","type":"image/png","size":96682}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1753537714284,"stop":1753537714360,"duration":76},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"severity","value":"Critical"},{"name":"feature","value":"Пользовательские сценарии"},{"name":"tag","value":"auth"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_excursium"},{"name":"subSuite","value":"TestUserCases"},{"name":"host","value":"9cda5a385005"},{"name":"thread","value":"19-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_excursium"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":55,"unknown":0,"total":58},"items":[{"uid":"abfd843cc183e02b","status":"passed","time":{"start":1753529374182,"stop":1753529380439,"duration":6257}},{"uid":"8e97f8241868f661","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1753527708368,"stop":1753527723627,"duration":15259}},{"uid":"24596e221265f77d","status":"passed","time":{"start":1753523639711,"stop":1753523643131,"duration":3420}},{"uid":"991d00f63881b3d3","status":"passed","time":{"start":1753523035045,"stop":1753523038669,"duration":3624}},{"uid":"24b52304a4ac71e7","status":"passed","time":{"start":1753522702471,"stop":1753522706902,"duration":4431}},{"uid":"71f77f678a20b0d9","status":"passed","time":{"start":1753521424021,"stop":1753521427366,"duration":3345}},{"uid":"5f74baed8ebd201d","status":"passed","time":{"start":1753520092707,"stop":1753520099469,"duration":6762}},{"uid":"c4af96ed67de5d7b","status":"passed","time":{"start":1753517498681,"stop":1753517501799,"duration":3118}},{"uid":"97e38afcf5325f51","status":"passed","time":{"start":1753516283294,"stop":1753516291135,"duration":7841}},{"uid":"e906f0177f666aa7","status":"passed","time":{"start":1753514112169,"stop":1753514117311,"duration":5142}},{"uid":"9db3d1ee12765220","status":"passed","time":{"start":1753513044502,"stop":1753513048880,"duration":4378}},{"uid":"f8d022decf8d26ad","status":"passed","time":{"start":1753508147585,"stop":1753508151256,"duration":3671}},{"uid":"a179fea1f243ac3a","status":"passed","time":{"start":1753506501747,"stop":1753506504853,"duration":3106}},{"uid":"f249d2a303f3d4db","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1753455833571,"stop":1753455850790,"duration":17219}},{"uid":"7db54158c52591ab","status":"passed","time":{"start":1753454906486,"stop":1753454914959,"duration":8473}},{"uid":"19b59b4e262c2207","status":"passed","time":{"start":1753454453238,"stop":1753454456440,"duration":3202}},{"uid":"eef6604d774962de","status":"passed","time":{"start":1753454318371,"stop":1753454321825,"duration":3454}},{"uid":"478d38fc4bd04367","status":"passed","time":{"start":1753454183056,"stop":1753454186613,"duration":3557}},{"uid":"22c75f5f115b2cfa","status":"passed","time":{"start":1753453889046,"stop":1753453896698,"duration":7652}},{"uid":"4149de8e219f70ce","status":"passed","time":{"start":1753453566593,"stop":1753453569896,"duration":3303}}]},"tags":["auth"]},"source":"d19c94b22089a470.json","parameterValues":[]}