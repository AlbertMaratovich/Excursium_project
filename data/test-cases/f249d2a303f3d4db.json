{"uid":"f249d2a303f3d4db","name":"Авторизация в аккаунт с корректными данными","fullName":"tests.test_excursium.TestUserCases#test_enter_account_correct_data","historyId":"413771a93b852e424406e12591211125","time":{"start":1753455833571,"stop":1753455850790,"duration":17219},"description":"Проверка возможности входа в аккаунт с корректными данными","descriptionHtml":"<p>Проверка возможности входа в аккаунт с корректными данными</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <test_excursium.TestUserCases object at 0x7fc95345ead0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b766f83c369b8b5b998b25e1ccd0baec\")>\n\n    @allure.title(\"Авторизация в аккаунт с корректными данными\")\n    @allure.severity(\"Critical\")\n    @pytest.mark.auth\n    def test_enter_account_correct_data(self, driver):\n        \"\"\"Проверка возможности входа в аккаунт с корректными данными\"\"\"\n        with allure.step(\"Открываем страницу\"):\n            login_page = LoginPage(driver)\n            driver.get(config.base_url)\n    \n        with allure.step(\"Переходим к странице логина\"):\n            driver.find_element(*login_page.login_header).click()\n>           assert login_page.is_opened(config.login_url), \"Отсутствует переход к страница логина\"\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntests/test_excursium.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nbase/base_page.py:18: in is_opened\n    return self.wait.until(EC.url_to_be(page))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"b766f83c369b8b5b998b25e1ccd0baec\")>\nmethod = <function url_to_be.<locals>._predicate at 0x7fc953413f60>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/usr/local/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:138: TimeoutException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1753455832698,"stop":1753455833570,"duration":872},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Проверка возможности входа в аккаунт с корректными данными","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <test_excursium.TestUserCases object at 0x7fc95345ead0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b766f83c369b8b5b998b25e1ccd0baec\")>\n\n    @allure.title(\"Авторизация в аккаунт с корректными данными\")\n    @allure.severity(\"Critical\")\n    @pytest.mark.auth\n    def test_enter_account_correct_data(self, driver):\n        \"\"\"Проверка возможности входа в аккаунт с корректными данными\"\"\"\n        with allure.step(\"Открываем страницу\"):\n            login_page = LoginPage(driver)\n            driver.get(config.base_url)\n    \n        with allure.step(\"Переходим к странице логина\"):\n            driver.find_element(*login_page.login_header).click()\n>           assert login_page.is_opened(config.login_url), \"Отсутствует переход к страница логина\"\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntests/test_excursium.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nbase/base_page.py:18: in is_opened\n    return self.wait.until(EC.url_to_be(page))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"b766f83c369b8b5b998b25e1ccd0baec\")>\nmethod = <function url_to_be.<locals>._predicate at 0x7fc953413f60>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/usr/local/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:138: TimeoutException","steps":[{"name":"Открываем страницу","time":{"start":1753455833571,"stop":1753455837417,"duration":3846},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Переходим к странице логина","time":{"start":1753455837417,"stop":1753455850789,"duration":13372},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \n\n","statusTrace":"  File \"/app/tests/test_excursium.py\", line 24, in test_enter_account_correct_data\n    assert login_page.is_opened(config.login_url), \"Отсутствует переход к страница логина\"\n           ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^\n  File \"/app/base/base_page.py\", line 18, in is_opened\n    return self.wait.until(EC.url_to_be(page))\n           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.13/site-packages/selenium/webdriver/support/wait.py\", line 138, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[{"name":"Проверяем открыта ли страница","time":{"start":1753455840694,"stop":1753455850788,"duration":10094},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \n\n","statusTrace":"  File \"/app/base/base_page.py\", line 18, in is_opened\n    return self.wait.until(EC.url_to_be(page))\n           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.13/site-packages/selenium/webdriver/support/wait.py\", line 138, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"cd495f68f90887d3","name":"Скриншот при падении","source":"cd495f68f90887d3.png","type":"image/png","size":107301}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1753455850945,"stop":1753455851028,"duration":83},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"severity","value":"Critical"},{"name":"feature","value":"Пользовательские сценарии"},{"name":"tag","value":"auth"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_excursium"},{"name":"subSuite","value":"TestUserCases"},{"name":"host","value":"1d467eee7d04"},{"name":"thread","value":"19-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_excursium"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":43,"unknown":0,"total":44},"items":[{"uid":"7db54158c52591ab","status":"passed","time":{"start":1753454906486,"stop":1753454914959,"duration":8473}},{"uid":"19b59b4e262c2207","status":"passed","time":{"start":1753454453238,"stop":1753454456440,"duration":3202}},{"uid":"eef6604d774962de","status":"passed","time":{"start":1753454318371,"stop":1753454321825,"duration":3454}},{"uid":"478d38fc4bd04367","status":"passed","time":{"start":1753454183056,"stop":1753454186613,"duration":3557}},{"uid":"22c75f5f115b2cfa","status":"passed","time":{"start":1753453889046,"stop":1753453896698,"duration":7652}},{"uid":"4149de8e219f70ce","status":"passed","time":{"start":1753453566593,"stop":1753453569896,"duration":3303}},{"uid":"4f38a4df67391821","status":"passed","time":{"start":1753453145520,"stop":1753453150046,"duration":4526}},{"uid":"e07266ab35238a23","status":"passed","time":{"start":1753451745892,"stop":1753451750045,"duration":4153}},{"uid":"36afac2172499d67","status":"passed","time":{"start":1753451519245,"stop":1753451522390,"duration":3145}},{"uid":"959704c3ef3279ee","status":"passed","time":{"start":1753450756829,"stop":1753450761841,"duration":5012}},{"uid":"6e1a1a4a77244cad","status":"passed","time":{"start":1753450554497,"stop":1753450557871,"duration":3374}},{"uid":"fd64337d0bc230a6","status":"passed","time":{"start":1753450293936,"stop":1753450297178,"duration":3242}},{"uid":"e5b35b4c56054678","status":"passed","time":{"start":1753449582143,"stop":1753449586081,"duration":3938}},{"uid":"a954ec8261e76b3a","status":"passed","time":{"start":1753449309807,"stop":1753449314304,"duration":4497}},{"uid":"4a84cb5e2aea773f","status":"passed","time":{"start":1753448817008,"stop":1753448821212,"duration":4204}},{"uid":"88465f766d7836ed","status":"passed","time":{"start":1753448585874,"stop":1753448590005,"duration":4131}},{"uid":"c02d90892b9ba42b","status":"passed","time":{"start":1753448202035,"stop":1753448205921,"duration":3886}},{"uid":"a7865acde2fc2d1f","status":"passed","time":{"start":1753446765029,"stop":1753446769639,"duration":4610}},{"uid":"90c902d04203565","status":"passed","time":{"start":1753445567494,"stop":1753445571077,"duration":3583}},{"uid":"83011fd017278d9a","status":"passed","time":{"start":1753444236390,"stop":1753444240591,"duration":4201}}]},"tags":["auth"]},"source":"f249d2a303f3d4db.json","parameterValues":[]}